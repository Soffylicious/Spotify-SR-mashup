openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'climeXhue'
  description: ''
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/climeXhue/climeXhue/1.0.0
paths: 
  /city/{cityName}:
    get: 
      summary: Returns current weather data for a city.
      parameters: 
        - name: cityName
          in: path 
          required: true 
          description: Name of a city.
          schema: 
            type: string 
            example: Stockholm
      responses: 
        '200':
          description: A JSON weather object.
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Weather' 
                  
        '404':
          description: City not found.
        default: 
          description: Unexpected error.
  /local:
    put: 
      summary: Returns current weather data based on geolocation (longitude, latitude), and sends a message with the correspondig hue value to CloudMQTT.
      requestBody:
        description: Coordinates consist of longitude and latitude, for example longitude=13, latitude=55.
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/LonLat'
      responses: 
        '200':
          description: Returns a JSON Weather object.
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Weather' 
                  
        '404':
          description: No city found.
        default: 
          description: Unexpected error.
  /power:
    put: 
      summary: Allows the user to turn the light on and off. 
      parameters: 
        - name: power
          in: path 
          required: true 
          description: Toogle the hue light on/off by sending a boolean. On=true, Off=false.
          schema: 
            type: boolean
            example: true
            description: A boolean that toggles hue-light on/off.
      responses: 
        '201':
          description: Sent a request to toggle the lamp on/off.
        '400':
          description: Invalid input, object invalid.
        '404':
          description: Unexpected error.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                power:
                  type: boolean 
                  example: true
        
  /brightness: 
    put: 
      summary: Changes the brightness of a specific light to a new brightness, within the valid range. 
      parameters: 
        - name: brightness
          in: path 
          required: true 
          description: The brightness value to set the light to.Brightness is a scale from 1 (the minimum the light is capable of) to 254 (the maximum).
          schema: 
            type: integer
            example: 60 will set the light to a specific brightness.
      responses: 
        '201':
          description: Sent a request to set the light to a specific brightness.
        '400':
          description: Invalid input, object invalid.
        '404':
          description: Unexpected error.
      requestBody:
          content: 
            application/json:
              schema:
                properties:
                  brightness:
                    type: integer
                    minimum: 1
                    maximum: 254
                    example: 60
                    description: 60 will set the light to a specific brightness.
  /hue: 
    put: 
      summary: Changes the brightness of a specific light to a new brightness, within the valid range. 
      parameters: 
        - name: hue
          in: path 
          required: true 
          description: The hue value to set light to.The hue value is a wrapping value between 0 and 65535. Both 0 and 65535 are red, 25500 is green and 46920 is blue.
          schema: 
            type: number
            example: 50000 will set the light to a specific hue.
      responses: 
        '201':
          description: Sent a request to set the light to a specific hue.
        '400':
          description: Invalid input, object invalid.
        '404':
          description: Unexpected error.
      requestBody:
        content: 
          application/json:
            schema:
              properties:
                hue:
                  type: integer
                  minimum: 0
                  maximum: 65535
                  example: 50000
                  description: 50000 will set the light to a specific hue.
components: 
  schemas:
    Weather: 
      type: object 
      description: A JSON object containing weather information.
      properties:
        cityName: 
          type: string 
          example: Lomma
        mainWeather: 
          type: string 
          example: rain 
        weatherDetails: 
          type: string 
          example: light rain 
        day: 
          type: boolean 
          example: true
        temperature: 
          type: integer
          example: 13
        humidity: 
          type: integer 
          example: 85
        windSpeed: 
          type: integer
          example: 11
        color: 
          type: integer
          example: 
    LonLat: 
      type: object 
      description: Longitude and latitude coordinates. 
      properties: 
        longitude: 
          type: number
          example: 13.6
        latitude: 
          type: number
          example: 55.6